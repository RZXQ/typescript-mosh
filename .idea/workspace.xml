<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="baab18ae-26a2-4fe6-a164-07ccf75540e2" name="Changes" comment="Refactor type examples and update variable naming&#10;&#10;Adjusted comments for clarity on TypeScript type inference. Renamed variables for better readability and consistency with naming conventions.">
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/02- Getting Started with TypeScript/4- Your First TypeScript Program/4- Your First TypeScript Program.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/03- Fundamentals/2- Built-in Types/2- Built-in Types.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/03- Fundamentals/2- Built-in Types/2- Built-in Types.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/03- Fundamentals/3- The any Type/3- The any Type.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/03- Fundamentals/3- The any Type/3- The any Type.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/03- Fundamentals/5- Arrays/5- Arrays.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/03- Fundamentals/5- Arrays/5- Arrays.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/03- Fundamentals/6- Tuples/6- Tuples.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/03- Fundamentals/6- Tuples/6- Tuples.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/03- Fundamentals/7- Enums/7- Enums.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/03- Fundamentals/7- Enums/7- Enums.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/03- Fundamentals/8- Functions/8- Functions.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/03- Fundamentals/9- Objects/9- Objects.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/index.ts" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2tMGOqS0p8ijJZV0eAWNIhOqbMt" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="openDirectoriesWithSingleClick" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "Node.js.4- Your First TypeScript Program.ts.executor": "Run",
    "Node.js.index.ts.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "configurable.group.appearance",
    "ts.external.directory.path": "/Users/reacher/Documents/HyperSkill/typescript/typescript-mosh/node_modules/typescript/lib"
  }
}]]></component>
  <component name="RunManager">
    <configuration name="4- Your First TypeScript Program.ts" type="NodeJSConfigurationType" temporary="true" nameIsGenerated="true" path-to-js-file="$PROJECT_DIR$/src/02- Getting Started with TypeScript/4- Your First TypeScript Program/4- Your First TypeScript Program.ts" typescript-loader="bundled" working-dir="$PROJECT_DIR$/src/02- Getting Started with TypeScript/4- Your First TypeScript Program">
      <method v="2" />
    </configuration>
    <configuration name="index.ts" type="NodeJSConfigurationType" temporary="true" nameIsGenerated="true" path-to-js-file="$PROJECT_DIR$/src/index.ts" typescript-loader="bundled" working-dir="$PROJECT_DIR$/src">
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Node.js.4- Your First TypeScript Program.ts" />
        <item itemvalue="Node.js.index.ts" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-76f8388c3a79-JavaScript-WS-243.24978.60" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="baab18ae-26a2-4fe6-a164-07ccf75540e2" name="Changes" comment="" />
      <created>1740154501018</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1740154501018</updated>
      <workItem from="1740154502060" duration="471000" />
      <workItem from="1740242142129" duration="1507000" />
    </task>
    <task id="LOCAL-00001" summary="Simplify project structure and setup TypeScript.&#10;&#10;Removed unnecessary `.idea` config files and cleaned up `.gitignore` to streamline version control. Added a minimal TypeScript setup with a starter script, updated dependencies, and refined configuration in `tsconfig.json`.">
      <option name="closed" value="true" />
      <created>1740154632315</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1740154632315</updated>
    </task>
    <task id="LOCAL-00002" summary="Remove redundant files and refactor project structure&#10;&#10;Deleted unused educational TypeScript and JS files to streamline the codebase. Cleaned up `.idea` configuration and refined `.gitignore` for better version control">
      <option name="closed" value="true" />
      <created>1740154731656</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1740154731656</updated>
    </task>
    <task id="LOCAL-00003" summary="Add examples for TypeScript fundamentals&#10;&#10;Introduced TypeScript examples covering built-in types, arrays, tuples, enums, functions, and objects. These examples highlight key concepts such as type inference, `any` avoidance, tuple constraints, enum usage, default function parameters, and readonly object properties. Each file demonstrates concise usage and best practices for learning foundational TypeScript principles.">
      <option name="closed" value="true" />
      <created>1740154756843</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1740154756843</updated>
    </task>
    <task id="LOCAL-00004" summary="**Add examples for TypeScript fundamentals**&#10;&#10;Added foundational TypeScript examples, including types, arrays, tuples, enums, functions, and objects. The examples emphasize key concepts such as type inference, avoiding `any`, tuple constraints, enum usage, default parameters, and immutability with `readonly`. These serve as a clear introduction to essential TypeScript practices.">
      <option name="closed" value="true" />
      <created>1740242472155</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1740242472155</updated>
    </task>
    <task id="LOCAL-00005" summary="Refactor type examples and update variable naming&#10;&#10;Adjusted comments for clarity on TypeScript type inference. Renamed variables for better readability and consistency with naming conventions.">
      <option name="closed" value="true" />
      <created>1740243511795</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1740243511795</updated>
    </task>
    <option name="localTasksCounter" value="6" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
    <option name="exactExcludedFiles">
      <list>
        <option value="$PROJECT_DIR$/03- Fundamentals/5- Arrays/5- Arrays.js" />
        <option value="$PROJECT_DIR$/03- Fundamentals/3- The any Type/3- The any Type.js" />
        <option value="$PROJECT_DIR$/03- Fundamentals/2- Built-in Types/2- Built-in Types.js" />
        <option value="$PROJECT_DIR$/03- Fundamentals/6- Tuples/6- Tuples.js" />
        <option value="$PROJECT_DIR$/03- Fundamentals/7- Enums/7- Enums.js" />
        <option value="$PROJECT_DIR$/src/index.js" />
      </list>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Simplify project structure and setup TypeScript.&#10;&#10;Removed unnecessary `.idea` config files and cleaned up `.gitignore` to streamline version control. Added a minimal TypeScript setup with a starter script, updated dependencies, and refined configuration in `tsconfig.json`." />
    <MESSAGE value="Remove redundant files and refactor project structure&#10;&#10;Deleted unused educational TypeScript and JS files to streamline the codebase. Clean" />
    <MESSAGE value="Remove redundant files and refactor project structure&#10;&#10;Deleted unused educational TypeScript and JS files to streamline the codebase. Clean. Simplified the project by focusing on a minimal TypeScript setup with improved organization." />
    <MESSAGE value="Add fundamental TypeScript examples for types, arrays, tuples, enums, functions, and objects&#10;&#10;Introduced examples for built-in types, emphasizing TypeScript's type inference and safety features. Covered key concepts like avoiding `any`, tuple limitations, enum optimizations, function default values, and object immutability using `readonly`. These examples aim to provide a clear foundation in TypeScript basics." />
    <MESSAGE value="Add examples for TypeScript fundamentals&#10;&#10;Introduced TypeScript examples covering built-in types, arrays, tuples, enums, functions, and objects. These examples highlight key concepts such as type inference, `any` avoidance, tuple constraints, enum usage, default function parameters, and readonly object properties. Each file demonstrates concise usage and best practices for learning foundational TypeScript principles." />
    <MESSAGE value="**Add examples for TypeScript fundamentals**&#10;&#10;Added foundational TypeScript examples, including types, arrays, tuples, enums, functions, and objects. The examples emphasize key concepts such as type inference, avoiding `any`, tuple constraints, enum usage, default parameters, and immutability with `readonly`. These serve as a clear introduction to essential TypeScript practices." />
    <MESSAGE value="Refactor type examples and update variable naming&#10;&#10;Adjusted comments for clarity on TypeScript type inference. Renamed variables for better readability and consistency with naming conventions." />
    <option name="LAST_COMMIT_MESSAGE" value="Refactor type examples and update variable naming&#10;&#10;Adjusted comments for clarity on TypeScript type inference. Renamed variables for better readability and consistency with naming conventions." />
  </component>
</project>